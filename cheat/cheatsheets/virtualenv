### VirtualeEvironment 
# tool to keep the dependencies for different projects in separate places
pip install virtualenv

# create "env_name" in $WORKON_HOME || Optional: specify /path/to/
virtualenv env_name || virtualenv /path/to/env_name

# create new environment and inherit already installed Python libraries
virtualenv --system-site-package env_name

# specify python version
virtualenv -p /usr/bin/python_version env_name

# activate || deactivate env
source env_name/bin/activate || deactivate

# keep your environment consistent || install requirements
pip freeze > requirements.txt || pip install -r requirements.txt

### VirtualenvWrapper - addon for virtual environments
pip install virtualenvwrapper || pip install --user virtualenvwrapper
export WORKON_HOME=~/python_evns 		# default ~/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh 	# add to .bashrc for autostart

# create || remove virtual env
mkvirtualenv env_name || rmvirtualenv env_name

# start / stop virtual env
workon env_name || deactivate
